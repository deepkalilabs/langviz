{
  "name": "test3",
  "d3": "function createChart(data) {\n  // Specify the chart's dimensions.\n  const width = 928;\n  const height = 600;\n  const marginTop = 25;\n  const marginRight = 20;\n  const marginBottom = 35;\n  const marginLeft = 40;\n\n  // Create the positional scales.\n  const x = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.Engine_Size__l_)).nice()\n    .range([marginLeft, width - marginRight]);\n  const y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.Highway_Miles_Per_Gallon)).nice()\n    .range([height - marginBottom, marginTop]);\n\n  // Create the SVG container.\n  const svg = d3.create(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"style\", \"max-width: 100%; height: auto;\");\n\n  // Append the axes.\n  svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height - marginBottom})`)\n      .call(d3.axisBottom(x).ticks(width / 80))\n      .call(g => g.select(\".domain\").remove())\n      .call(g => g.append(\"text\")\n          .attr(\"x\", width)\n          .attr(\"y\", marginBottom - 4)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"end\")\n          .text(\"Engine Size (L) →\"));\n\n  svg.append(\"g\")\n      .attr(\"transform\", `translate(${marginLeft},0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select(\".domain\").remove())\n      .call(g => g.append(\"text\")\n          .attr(\"x\", -marginLeft)\n          .attr(\"y\", 10)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\")\n          .text(\"↑ Highway MPG\"));\n\n  // Add a grid.\n  svg.append(\"g\")\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-opacity\", 0.1)\n      .call(g => g.append(\"g\")\n        .selectAll(\"line\")\n        .data(x.ticks())\n        .join(\"line\")\n          .attr(\"x1\", d => 0.5 + x(d))\n          .attr(\"x2\", d => 0.5 + x(d))\n          .attr(\"y1\", marginTop)\n          .attr(\"y2\", height - marginBottom))\n      .call(g => g.append(\"g\")\n        .selectAll(\"line\")\n        .data(y.ticks())\n        .join(\"line\")\n          .attr(\"y1\", d => 0.5 + y(d))\n          .attr(\"y2\", d => 0.5 + y(d))\n          .attr(\"x1\", marginLeft)\n          .attr(\"x2\", width - marginRight));\n\n  // Add the scatterplot symbols.\n  svg.append(\"g\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n    .selectAll(\"circle\")\n    .data(data)\n    .join(\"circle\")\n      .attr(\"cx\", d => x(d.Engine_Size__l_))\n      .attr(\"cy\", d => y(d.Highway_Miles_Per_Gallon))\n      .attr(\"r\", 3)\n      .attr(\"fill\", \"currentColor\");\n\n  return Object.assign(svg.node(), {scales: {x, y}});\n}"
}
