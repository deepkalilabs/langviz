version: '3.9'

services:
  backend:
    build:
        context: ./
        dockerfile: docker/Dockerfile.backend
    volumes:
        - ./backend:/usr/src/app
    ports:
        - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - DEBUG=${DEBUG:-True}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost 127.0.0.1 0.0.0.0}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-adminpassword}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - djangonetwork

  frontend:
    environment:
      - WATCHPACK_POLLING=true
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    tty: true
    volumes:
      - ./frontend:/frontend
    networks:
      - djangonetwork
    ports:
      - "3000:3000"

  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - djangonetwork

networks:
  djangonetwork:
    driver: bridge

volumes:
  pgdata:

