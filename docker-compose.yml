version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "3001:3001"
    environment:
      - APP_PORT=3001
    depends_on:
      db:
        condition: service_healthy    
    volumes:
      - ./backend:/backend
    links: 
        - db
    command: >
      /bin/sh -c "
      flask db upgrade &&
      flask run --host=0.0.0.0 --port=3001 --reload
      "
    networks:
      - djangonetwork

  frontend:
    environment:
      - WATCHPACK_POLLING=true
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    tty: true
    volumes:
      - ./frontend:/frontend
    networks:
      - djangonetwork
    ports:
      - "3000:3000"

  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - djangonetwork

networks:
  djangonetwork:
    driver: bridge

volumes:
  pgdata:
  zap_reports:

